if(function(){"use strict";var o={version:"0.0.0",createGeocoder:function(e){return(new o.ProviderFactory).createProvider(e)}};("object"==typeof window?window:"object"==typeof exports?exports:{}).GeocoderJS=o}(),"function"==typeof define&&define.amd&&define(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require)var GeocoderJS=require("../GeocoderJS.js");if(function(e){"use strict";e.ProviderBase=function(){},e.ProviderBase.prototype={geocode:function(){},geodecode:function(){},mapToGeocoded:function(){},executeRequest:function(){}}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require)GeocoderJS=require("./GeocoderJS.js");if(function(e){"use strict";e.Geocoded=function(){},e.Geocoded.prototype={getCoordinates:function(){return[this.latitude,this.longitude]},getLatitude:function(){return this.latitude},getLongitude:function(){return this.longitude},getBounds:function(){},getStreetNumber:function(){return this.streetNumber},getStreetName:function(){return this.streetName},getCity:function(){return this.city},getZipcode:function(){return this.postal_code},getCityDistrict:function(){},getCounty:function(){},getCountyCode:function(){},getRegion:function(){return this.region}}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require)GeocoderJS=require("./GeocoderJS.js");if(function(){"use strict";var t={type:"Feature",properties:{},geometry:{type:"Point",coordinates:[]}};GeocoderJS.GeoJSONDumper=function(){return{dump:function(e){var o=t;return o.geometry.coordinates=[e.getLongitude(),e.getLatitude()],o}}}}(),void 0===GeocoderJS&&"function"==typeof require){GeocoderJS=require("../GeocoderJS.js");require("../ExternalURILoader.js")}if(function(r){"use strict";r.ProviderFactory=function(){},r.ProviderFactory.prototype.createProvider=function(e){"string"==typeof e&&(e={provider:e});var o,t=new r.ExternalURILoader;switch(e.provider){case"google":o=new r.GoogleAPIProvider(t,e);break;case"mapquest":o=new r.MapquestProvider(t,e);break;case"openstreetmap":o=new r.OpenStreetMapProvider(t,e);break;case"bing":o=new r.BingProvider(t,e);break;case"yandex":o=new r.YandexProvider(t,e)}return o}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require)GeocoderJS=require("../GeocoderJS.js");if(function(d,l){"use strict";d.ExternalURILoader=function(e){this.options={},void 0===e&&(e={}),this.setOptions(e)},d.ExternalURILoader.prototype.setOptions=function(e){var o={protocol:null,host:null,pathname:null};for(var t in o)this.options[t]=void 0!==e[t]?e[t]:o[t]},d.ExternalURILoader.prototype.executeRequest=function(e,o){var t,n,r,i,a,s,p=this;if("undefined"!=typeof XMLHttpRequest)return function(e,o){var t,r,n,i,a=new XMLHttpRequest,s=p.options.protocol+"://"+p.options.host+"/"+p.options.pathname+"?",d=[];for(var c in e.JSONPCallback&&(t=e.JSONPCallback,delete e.JSONPCallback,e[t]=(r=o,n=Date.now(),i="jsonp"+Math.round(n+1000001*Math.random()),l[i]=function(e){r(e),delete l[i]},i)),e)e.hasOwnProperty(c)&&d.push(c+"="+e[c]);if(s+=d.join("&"),t){var u=document.createElement("script");u.src=s,document.getElementsByTagName("head")[0].appendChild(u)}else a.onload=function(){if(200!=this.status)return console.log("Received HTTP status code "+this.status+" when attempting geocoding request."),o(null);if(!this.responseText||!this.responseText.length)return console.log("Received empty data when attempting geocoding request."),o(null);var e=!1;try{e=JSON.parse(this.responseText)}catch(e){return console.log("Received invalid JSON data when attempting geocoding request."),o(null)}return e?o(e):(console.log("Received unexpected JSON data when attempting geocoding request."),o(null))},a.open("GET",s),a.send()}(e,o);try{return require("url"),t=e,n=o,i=require("url"),a=require(p.options.protocol),s={protocol:p.options.protocol,host:p.options.host,pathname:p.options.pathname,query:t},r=i.format(s),void a.get(r,function(r){if(200!=r.statusCode)throw"Received HTTP status code "+r.statusCode+" when attempting geocoding request.";r.data="",r.setEncoding("utf8"),r.on("data",function(e){r.data+=e}),r.on("end",function(){if(!r.data||!r.data.length)throw"Received empty data when attempting geocoding request.";var e=!1,o=0,t=[];try{e=JSON.parse(r.data)}catch(e){throw"Received invalid JSON data when attempting geocoding request."}if(e&&e.status){if("OVER_QUERY_LIMIT"===e.status)throw"Exceeded daily quota when attempting geocoding request.";if("OK"===e.status&&e.results){for(;o<e.results.length;o++)t.push(d.GoogleAPIProvider.prototype.mapToGeocoded(e.results[o]));return n(t)}}throw"Received unexpected JSON data when attempting geocoding request."})}).on("error",function(e){throw e})}catch(e){}return o(null)}}(GeocoderJS,window),void 0===GeocoderJS&&"function"==typeof require){GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}if(function(t){"use strict";var n,i;t.BingProvider=function(e,o){if(void 0===e)throw"No external loader defined.";this.externalLoader=e,n=!!(o=o||{}).useSSL&&o.useSSL,(i=o.apiKey?o.apiKey:null)&&(n=!0)},t.BingProvider.prototype=new t.ProviderBase,t.BingProvider.prototype.constructor=t.BingProvider,t.BingProvider.prototype.geocode=function(e,o){this.externalLoader.setOptions({protocol:!0===n?"https":"http",host:"dev.virtualearth.net",pathname:"REST/v1/Locations/"+e});var t={key:i,JSONPCallback:"jsonp"};this.executeRequest(t,o)},t.BingProvider.prototype.geodecode=function(e,o,t){this.externalLoader.setOptions({protocol:!0===n?"https":"http",host:"dev.virtualearth.net",pathname:"REST/v1/Locations/"+e+","+o});var r={key:i,JSONPCallback:"jsonp"};this.executeRequest(r,t)},t.BingProvider.prototype.executeRequest=function(e,r){var n=this;this.externalLoader.executeRequest(e,function(e){var o=[];for(var t in e.resourceSets[0].resources)o.push(n.mapToGeocoded(e.resourceSets[0].resources[t]));r(o)})},t.BingProvider.prototype.mapToGeocoded=function(e){var o=new t.Geocoded;return o.latitude=e.point.coordinates[0],o.longitude=e.point.coordinates[1],o.streetName=e.address.addressLine,o.city=e.address.locality,o.region=e.address.adminDistrict,o.postal_code=e.address.postalCode,o}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require){GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}if(function(n){"use strict";var i,a;n.GoogleAPIProvider=function(e,o){if(void 0===e)throw"No external loader defined.";this.externalLoader=e,i=!!(o=o||{}).useSSL&&o.useSSL,(a=o.apiKey?o.apiKey:null)&&(i=!0)},n.GoogleAPIProvider.prototype=new n.ProviderBase,n.GoogleAPIProvider.prototype.constructor=n.GoogleAPIProvider,n.GoogleAPIProvider.prototype.geocode=function(e,o){this.externalLoader.setOptions({protocol:!0===i?"https":"http",host:"maps.googleapis.com",pathname:"maps/api/geocode/json"});var t={sensor:!1,address:e};a&&(t.key=a),this.executeRequest(t,o)},n.GoogleAPIProvider.prototype.geodecode=function(e,o,t){this.externalLoader.setOptions({protocol:i?"https":"http",host:"maps.googleapis.com",pathname:"maps/api/geocode/json"});var r={sensor:!1,latlng:e+","+o};a&&(r.key=a),this.executeRequest(r,t)},n.GoogleAPIProvider.prototype.executeRequest=function(e,r){var n=this;this.externalLoader.executeRequest(e,function(e){var o=[];for(var t in e.results)o.push(n.mapToGeocoded(e.results[t]));r(o)})},n.GoogleAPIProvider.prototype.mapToGeocoded=function(e){var o=new n.Geocoded;for(var t in o.latitude=e.geometry.location.lat,o.longitude=e.geometry.location.lng,e.address_components)for(var r in e.address_components[t].types)switch(e.address_components[t].types[r]){case"street_number":o.streetNumber=e.address_components[t].long_name;break;case"route":o.streetName=e.address_components[t].long_name;break;case"locality":o.city=e.address_components[t].long_name;break;case"administrative_area_level_1":o.region=e.address_components[t].long_name;break;case"postal_code":o.postal_code=e.address_components[t].long_name}return o}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require)GeocoderJS=require("../GeocoderJS.js");if(function(t){"use strict";t.MapquestProvider=function(e,o){if(void 0===e)throw"No external loader defined.";this.externalLoader=e,"object"!=typeof o&&(o={});var t={apiKey:""};for(var r in t)void 0===o[r]&&(o[r]=t[r]);this.apiKey=o.apiKey},t.MapquestProvider.prototype=new t.ProviderBase,t.MapquestProvider.prototype.constructor=t.MapquestProvider,t.MapquestProvider.prototype.geocode=function(e,o){this.externalLoader.setOptions({protocol:"http",host:"www.mapquestapi.com",pathname:"geocoding/v1/address"});var t={key:this.apiKey,outputFormat:"json",location:encodeURIComponent(e),JSONPCallback:"callback"};this.executeRequest(t,o)},t.MapquestProvider.prototype.geodecode=function(e,o,t){this.externalLoader.setOptions({protocol:"http",host:"www.mapquestapi.com",pathname:"geocoding/v1/reverse"});var r={key:this.apiKey,outputFormat:"json",JSONPCallback:"callback",location:e+","+o};this.executeRequest(r,t)},t.MapquestProvider.prototype.mapToGeocoded=function(e){var o=new t.Geocoded;return o.latitude=e.latLng.lat,o.longitude=e.latLng.lng,o.city=e.adminArea5,o.region=e.adminArea4,o.streetName=e.street,o.postal_code=e.postalCode,o},t.MapquestProvider.prototype.executeRequest=function(e,r){var n=this;this.externalLoader.executeRequest(e,function(e){var o=[];if(e.results[0].locations.length)for(var t in e.results[0].locations)o.push(n.mapToGeocoded(e.results[0].locations[t]));r(o)})}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require){GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../ExternalURILoader.js"),require("../providers/ProviderBase.js")}if(function(t){"use strict";t.OpenStreetMapProvider=function(e){if(void 0===e)throw"No external loader defined.";this.externalLoader=e},t.OpenStreetMapProvider.prototype=new t.ProviderBase,t.OpenStreetMapProvider.prototype.constructor=t.OpenStreetMapProvider,t.OpenStreetMapProvider.prototype.geocode=function(e,o){this.externalLoader.setOptions({protocol:"https",host:"nominatim.openstreetmap.org",pathname:"search"});var t={format:"json",q:e,addressdetails:1};this.executeRequest(t,o)},t.OpenStreetMapProvider.prototype.geodecode=function(e,o,t){this.externalLoader.setOptions({protocol:"https",host:"nominatim.openstreetmap.org",pathname:"reverse"});var r={format:"json",lat:e,lon:o,addressdetails:1,zoom:18};this.executeRequest(r,t)},t.OpenStreetMapProvider.prototype.executeRequest=function(e,r){var n=this;this.externalLoader.executeRequest(e,function(e){var o=[];if(e.length)for(var t in e)o.push(n.mapToGeocoded(e[t]));else o.push(n.mapToGeocoded(e));r(o)})},t.OpenStreetMapProvider.prototype.mapToGeocoded=function(e){var o=new t.Geocoded;return o.latitude=+e.lat,o.longitude=+e.lon,o.streetNumber=void 0!==e.address.house_number?e.address.house_number:void 0,o.streetName=e.address.road,o.city=e.address.city,o.region=e.address.state,o.postal_code=e.address.postcode,o.totalName=e.display_name,o.boundingbox=e.boundingbox,o}}(GeocoderJS),void 0===GeocoderJS&&"function"==typeof require){GeocoderJS=require("../GeocoderJS.js");require("../Geocoded.js"),require("../providers/ProviderBase.js")}!function(n){"use strict";var i;n.YandexProvider=function(e,o){if(void 0===e)throw"No external loader defined.";this.externalLoader=e,i=!!(o=o||{}).useSSL&&o.useSSL,this.lang=o.lang?o.lang:"en-US"},n.YandexProvider.prototype=new n.ProviderBase,n.YandexProvider.prototype.constructor=n.YandexProvider,n.YandexProvider.prototype.geocode=function(e,o){this.externalLoader.setOptions({protocol:!0===i?"https":"http",host:"geocode-maps.yandex.ru",pathname:"1.x"});var t={format:"json",geocode:e,JSONPCallback:"callback",lang:this.lang};this.executeRequest(t,o)},n.YandexProvider.prototype.geodecode=function(e,o,t){this.externalLoader.setOptions({protocol:!0===i?"https":"http",host:"geocode-maps.yandex.ru",pathname:"1.x"});var r={format:"json",geocode:o+","+e,JSONPCallback:"callback",lang:this.lang};this.executeRequest(r,t)},n.YandexProvider.prototype.executeRequest=function(e,r){var n=this;this.externalLoader.executeRequest(e,function(e){var o=[];for(var t in e.response.GeoObjectCollection.featureMember)o.push(n.mapToGeocoded(e.response.GeoObjectCollection.featureMember[t].GeoObject));r(o)})},n.YandexProvider.prototype.mapToGeocoded=function(e){var o=new n.Geocoded,t=e.Point.pos.split(" ");if(o.latitude=t[1],o.longitude=t[0],e.metaDataProperty.GeocoderMetaData.AddressDetails.Country){var r=e.metaDataProperty.GeocoderMetaData.AddressDetails.Country;r.AdministrativeArea&&(r=r.AdministrativeArea,o.region=r.AdministrativeAreaName,r.SubAdministrativeArea&&((r=r.SubAdministrativeArea).Locality&&(r=r.Locality,o.city=r.LocalityName,r.Thoroughfare&&(r=r.Thoroughfare,o.streetName=r.ThoroughfareName))))}return o}}(GeocoderJS);